const findBlockByAlias = (alias) => {
    return $(".reviews__item").filter((ndx, item) => {
        return $(item).attr("data-linked-with") === alias;
    });
};

$(".interactive-avatar__link").click((e) => {
    e.preventDefault();

    const $this = $(e.currentTarget);
    const target = $this.attr("data-open");
    const itemToShow = findBlockByAlias(target);
    const curItem = $this.parent();

    itemToShow.addClass("active").siblings().removeClass("active");
    curItem.addClass("active").siblings().removeClass("active");
})

const team = document.querySelector('.team');
const teamLink = document.querySelector('.team__link');

team.addEventListener('click', e => {
    e.preventDefault();
    const link = e.target;
    const listItem = e.currentTarget;

    if(link.classList.contains('team__link')) {
        const active = listItem.querySelector('.team__item.team__item--is-active');

        if(active) {
            let activeInfo = active.querySelector('.team__info');
            activeInfo.style.height = '0px';
            active.classList.remove('team__item--is-active');
        }

        if(!active || active.querySelector('.team__link') !== link) {
            let current = link.closest('.team__item');
            current.classList.add('team__item--is-active');
            let currentText = current.querySelector('.team__info');
            currentText.style.height = currentText.scrollHeight + 'px';
        }
    }
});

$(document).ready(function(){
    $('.slider-section__slider-control').slick(
        {
            nextArrow: $(".slider-section__right-arrow"),
            prevArrow: $(".slider-section__left-arrow"),
            centerMode: true,
            respondTo: 'min',
            centerPadding: '-5rem'
        }
    );
});


const validateFields = (form, fieldsArray) => {

    fieldsArray.forEach((field) => {
        field.removeClass('input-error');

        if (typeof field.val() === 'string') {
            if (field.val().trim() === '') {
                field.addClass('input-error')
            }
        }
        else if (typeof field.val() === 'undefined')
        {
            field.addClass('input-error')
        }
    });

    const errorFields = form.find('.input-error');

    return errorFields.length === 0;
}


$('.form').submit(e => {
    e.preventDefault();

    const form = $(e.currentTarget);
    const name = form.find("[name='name']");
    const phone = form.find("[name='phone']");
    const comment = form.find("[name='comment']");
    const to = form.find("[name='to']");

    const popup = $('#popup');
    const content = popup.find('.popup__text');
    popup.removeClass('error-popup');

    const isValid = validateFields(form, [name, phone, comment, to]);

    if (isValid) {
        const request = $.ajax({
            url:'https://webdev-api.loftschool.com/sendmail',
            method: 'post',
            data: {
                name: name.val(),
                phone: phone.val(),
                comment: comment.val(),
                to: to.val().trim(),
            },
            error: data => {}
        });

        request.done(data => {
            content.text(data.message);
        });

        request.fail(data => {
            const message = data.responseJSON.message;
            content.text(message);
            popup.find('.popup__text').addClass('error-popup')
        });

        request.always(() => {
            $.fancybox.open({
                src: '#popup',
                type: 'inline',
            });
        })
    }
});

$('.form__input').change(e => {
    $this = $(e.currentTarget);
    $this.removeClass('input-error');
});


$('.js-btn-submit').click(e => {
    e.preventDefault();

    $.fancybox.close();
});

const burgerBtn = $('#burger');
const hamburger = $('.hamburger-panel');
const closeBtn = $('.close-btn');

function switcher(elem, className) {
    elem.toggleClass(className);
}

let flag = true;

burgerBtn.click( e => {
    e.preventDefault();

    if(flag) {
        flag = false;
        hamburger.removeClass('hidden');
        setTimeout(function() {
            switcher(hamburger, 'isActive');
            flag = true;
        }, 500);
    }
});

closeBtn.click( e => {
    e.preventDefault();

    if(flag) {
        flag = false;
        hamburger.removeClass('isActive');
        setTimeout(function() {
            switcher(hamburger, 'hidden');
            flag = true;
        }, 500);
    }

});

//console.log('Привет мир');
const incpanel = document.querySelector('#incpanel');
const incmenu = document.querySelector('#incmenu');
const incpanel2 = document.querySelector('#incpanel2');
const incmenu2 = document.querySelector('#incmenu2');
let a = 7;
incpanel.addEventListener('mouseover', function() {
    incmenu.style.display = 'flex';
})

incpanel.addEventListener('mouseout', function() {
    incmenu.style.display = 'none';
})

incpanel2.addEventListener('mouseover', function() {
    incmenu2.style.display = 'flex';
})

incpanel2.addEventListener('mouseout', function() {
    incmenu2.style.display = 'none';
})

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhYnMuanMiLCJzbGlkZXRvZ2dsZS5qcyIsInNsaWRlci5qcyIsIm9yZGVyLmpzIiwiYnVyZ2VyLmpzIiwibW9kdWxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ2pCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDekJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ1hBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDakZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDcENBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImFwcC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBmaW5kQmxvY2tCeUFsaWFzID0gKGFsaWFzKSA9PiB7XHJcbiAgICByZXR1cm4gJChcIi5yZXZpZXdzX19pdGVtXCIpLmZpbHRlcigobmR4LCBpdGVtKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuICQoaXRlbSkuYXR0cihcImRhdGEtbGlua2VkLXdpdGhcIikgPT09IGFsaWFzO1xyXG4gICAgfSk7XHJcbn07XHJcblxyXG4kKFwiLmludGVyYWN0aXZlLWF2YXRhcl9fbGlua1wiKS5jbGljaygoZSkgPT4ge1xyXG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuICAgIGNvbnN0ICR0aGlzID0gJChlLmN1cnJlbnRUYXJnZXQpO1xyXG4gICAgY29uc3QgdGFyZ2V0ID0gJHRoaXMuYXR0cihcImRhdGEtb3BlblwiKTtcclxuICAgIGNvbnN0IGl0ZW1Ub1Nob3cgPSBmaW5kQmxvY2tCeUFsaWFzKHRhcmdldCk7XHJcbiAgICBjb25zdCBjdXJJdGVtID0gJHRoaXMucGFyZW50KCk7XHJcblxyXG4gICAgaXRlbVRvU2hvdy5hZGRDbGFzcyhcImFjdGl2ZVwiKS5zaWJsaW5ncygpLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpO1xyXG4gICAgY3VySXRlbS5hZGRDbGFzcyhcImFjdGl2ZVwiKS5zaWJsaW5ncygpLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpO1xyXG59KVxyXG4iLCJjb25zdCB0ZWFtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRlYW0nKTtcclxuY29uc3QgdGVhbUxpbmsgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudGVhbV9fbGluaycpO1xyXG5cclxudGVhbS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGUgPT4ge1xyXG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgY29uc3QgbGluayA9IGUudGFyZ2V0O1xyXG4gICAgY29uc3QgbGlzdEl0ZW0gPSBlLmN1cnJlbnRUYXJnZXQ7XHJcblxyXG4gICAgaWYobGluay5jbGFzc0xpc3QuY29udGFpbnMoJ3RlYW1fX2xpbmsnKSkge1xyXG4gICAgICAgIGNvbnN0IGFjdGl2ZSA9IGxpc3RJdGVtLnF1ZXJ5U2VsZWN0b3IoJy50ZWFtX19pdGVtLnRlYW1fX2l0ZW0tLWlzLWFjdGl2ZScpO1xyXG5cclxuICAgICAgICBpZihhY3RpdmUpIHtcclxuICAgICAgICAgICAgbGV0IGFjdGl2ZUluZm8gPSBhY3RpdmUucXVlcnlTZWxlY3RvcignLnRlYW1fX2luZm8nKTtcclxuICAgICAgICAgICAgYWN0aXZlSW5mby5zdHlsZS5oZWlnaHQgPSAnMHB4JztcclxuICAgICAgICAgICAgYWN0aXZlLmNsYXNzTGlzdC5yZW1vdmUoJ3RlYW1fX2l0ZW0tLWlzLWFjdGl2ZScpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYoIWFjdGl2ZSB8fCBhY3RpdmUucXVlcnlTZWxlY3RvcignLnRlYW1fX2xpbmsnKSAhPT0gbGluaykge1xyXG4gICAgICAgICAgICBsZXQgY3VycmVudCA9IGxpbmsuY2xvc2VzdCgnLnRlYW1fX2l0ZW0nKTtcclxuICAgICAgICAgICAgY3VycmVudC5jbGFzc0xpc3QuYWRkKCd0ZWFtX19pdGVtLS1pcy1hY3RpdmUnKTtcclxuICAgICAgICAgICAgbGV0IGN1cnJlbnRUZXh0ID0gY3VycmVudC5xdWVyeVNlbGVjdG9yKCcudGVhbV9faW5mbycpO1xyXG4gICAgICAgICAgICBjdXJyZW50VGV4dC5zdHlsZS5oZWlnaHQgPSBjdXJyZW50VGV4dC5zY3JvbGxIZWlnaHQgKyAncHgnO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSk7XHJcbiIsIiQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCl7XHJcbiAgICAkKCcuc2xpZGVyLXNlY3Rpb25fX3NsaWRlci1jb250cm9sJykuc2xpY2soXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBuZXh0QXJyb3c6ICQoXCIuc2xpZGVyLXNlY3Rpb25fX3JpZ2h0LWFycm93XCIpLFxyXG4gICAgICAgICAgICBwcmV2QXJyb3c6ICQoXCIuc2xpZGVyLXNlY3Rpb25fX2xlZnQtYXJyb3dcIiksXHJcbiAgICAgICAgICAgIGNlbnRlck1vZGU6IHRydWUsXHJcbiAgICAgICAgICAgIHJlc3BvbmRUbzogJ21pbicsXHJcbiAgICAgICAgICAgIGNlbnRlclBhZGRpbmc6ICctNXJlbSdcclxuICAgICAgICB9XHJcbiAgICApO1xyXG59KTtcclxuIiwiXHJcbmNvbnN0IHZhbGlkYXRlRmllbGRzID0gKGZvcm0sIGZpZWxkc0FycmF5KSA9PiB7XHJcblxyXG4gICAgZmllbGRzQXJyYXkuZm9yRWFjaCgoZmllbGQpID0+IHtcclxuICAgICAgICBmaWVsZC5yZW1vdmVDbGFzcygnaW5wdXQtZXJyb3InKTtcclxuXHJcbiAgICAgICAgaWYgKHR5cGVvZiBmaWVsZC52YWwoKSA9PT0gJ3N0cmluZycpIHtcclxuICAgICAgICAgICAgaWYgKGZpZWxkLnZhbCgpLnRyaW0oKSA9PT0gJycpIHtcclxuICAgICAgICAgICAgICAgIGZpZWxkLmFkZENsYXNzKCdpbnB1dC1lcnJvcicpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodHlwZW9mIGZpZWxkLnZhbCgpID09PSAndW5kZWZpbmVkJylcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGZpZWxkLmFkZENsYXNzKCdpbnB1dC1lcnJvcicpXHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgY29uc3QgZXJyb3JGaWVsZHMgPSBmb3JtLmZpbmQoJy5pbnB1dC1lcnJvcicpO1xyXG5cclxuICAgIHJldHVybiBlcnJvckZpZWxkcy5sZW5ndGggPT09IDA7XHJcbn1cclxuXHJcblxyXG4kKCcuZm9ybScpLnN1Ym1pdChlID0+IHtcclxuICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuXHJcbiAgICBjb25zdCBmb3JtID0gJChlLmN1cnJlbnRUYXJnZXQpO1xyXG4gICAgY29uc3QgbmFtZSA9IGZvcm0uZmluZChcIltuYW1lPSduYW1lJ11cIik7XHJcbiAgICBjb25zdCBwaG9uZSA9IGZvcm0uZmluZChcIltuYW1lPSdwaG9uZSddXCIpO1xyXG4gICAgY29uc3QgY29tbWVudCA9IGZvcm0uZmluZChcIltuYW1lPSdjb21tZW50J11cIik7XHJcbiAgICBjb25zdCB0byA9IGZvcm0uZmluZChcIltuYW1lPSd0byddXCIpO1xyXG5cclxuICAgIGNvbnN0IHBvcHVwID0gJCgnI3BvcHVwJyk7XHJcbiAgICBjb25zdCBjb250ZW50ID0gcG9wdXAuZmluZCgnLnBvcHVwX190ZXh0Jyk7XHJcbiAgICBwb3B1cC5yZW1vdmVDbGFzcygnZXJyb3ItcG9wdXAnKTtcclxuXHJcbiAgICBjb25zdCBpc1ZhbGlkID0gdmFsaWRhdGVGaWVsZHMoZm9ybSwgW25hbWUsIHBob25lLCBjb21tZW50LCB0b10pO1xyXG5cclxuICAgIGlmIChpc1ZhbGlkKSB7XHJcbiAgICAgICAgY29uc3QgcmVxdWVzdCA9ICQuYWpheCh7XHJcbiAgICAgICAgICAgIHVybDonaHR0cHM6Ly93ZWJkZXYtYXBpLmxvZnRzY2hvb2wuY29tL3NlbmRtYWlsJyxcclxuICAgICAgICAgICAgbWV0aG9kOiAncG9zdCcsXHJcbiAgICAgICAgICAgIGRhdGE6IHtcclxuICAgICAgICAgICAgICAgIG5hbWU6IG5hbWUudmFsKCksXHJcbiAgICAgICAgICAgICAgICBwaG9uZTogcGhvbmUudmFsKCksXHJcbiAgICAgICAgICAgICAgICBjb21tZW50OiBjb21tZW50LnZhbCgpLFxyXG4gICAgICAgICAgICAgICAgdG86IHRvLnZhbCgpLnRyaW0oKSxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgZXJyb3I6IGRhdGEgPT4ge31cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgcmVxdWVzdC5kb25lKGRhdGEgPT4ge1xyXG4gICAgICAgICAgICBjb250ZW50LnRleHQoZGF0YS5tZXNzYWdlKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgcmVxdWVzdC5mYWlsKGRhdGEgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBtZXNzYWdlID0gZGF0YS5yZXNwb25zZUpTT04ubWVzc2FnZTtcclxuICAgICAgICAgICAgY29udGVudC50ZXh0KG1lc3NhZ2UpO1xyXG4gICAgICAgICAgICBwb3B1cC5maW5kKCcucG9wdXBfX3RleHQnKS5hZGRDbGFzcygnZXJyb3ItcG9wdXAnKVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICByZXF1ZXN0LmFsd2F5cygoKSA9PiB7XHJcbiAgICAgICAgICAgICQuZmFuY3lib3gub3Blbih7XHJcbiAgICAgICAgICAgICAgICBzcmM6ICcjcG9wdXAnLFxyXG4gICAgICAgICAgICAgICAgdHlwZTogJ2lubGluZScsXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcbn0pO1xyXG5cclxuJCgnLmZvcm1fX2lucHV0JykuY2hhbmdlKGUgPT4ge1xyXG4gICAgJHRoaXMgPSAkKGUuY3VycmVudFRhcmdldCk7XHJcbiAgICAkdGhpcy5yZW1vdmVDbGFzcygnaW5wdXQtZXJyb3InKTtcclxufSk7XHJcblxyXG5cclxuJCgnLmpzLWJ0bi1zdWJtaXQnKS5jbGljayhlID0+IHtcclxuICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuXHJcbiAgICAkLmZhbmN5Ym94LmNsb3NlKCk7XHJcbn0pO1xyXG4iLCJjb25zdCBidXJnZXJCdG4gPSAkKCcjYnVyZ2VyJyk7XHJcbmNvbnN0IGhhbWJ1cmdlciA9ICQoJy5oYW1idXJnZXItcGFuZWwnKTtcclxuY29uc3QgY2xvc2VCdG4gPSAkKCcuY2xvc2UtYnRuJyk7XHJcblxyXG5mdW5jdGlvbiBzd2l0Y2hlcihlbGVtLCBjbGFzc05hbWUpIHtcclxuICAgIGVsZW0udG9nZ2xlQ2xhc3MoY2xhc3NOYW1lKTtcclxufVxyXG5cclxubGV0IGZsYWcgPSB0cnVlO1xyXG5cclxuYnVyZ2VyQnRuLmNsaWNrKCBlID0+IHtcclxuICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuXHJcbiAgICBpZihmbGFnKSB7XHJcbiAgICAgICAgZmxhZyA9IGZhbHNlO1xyXG4gICAgICAgIGhhbWJ1cmdlci5yZW1vdmVDbGFzcygnaGlkZGVuJyk7XHJcbiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgc3dpdGNoZXIoaGFtYnVyZ2VyLCAnaXNBY3RpdmUnKTtcclxuICAgICAgICAgICAgZmxhZyA9IHRydWU7XHJcbiAgICAgICAgfSwgNTAwKTtcclxuICAgIH1cclxufSk7XHJcblxyXG5jbG9zZUJ0bi5jbGljayggZSA9PiB7XHJcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcblxyXG4gICAgaWYoZmxhZykge1xyXG4gICAgICAgIGZsYWcgPSBmYWxzZTtcclxuICAgICAgICBoYW1idXJnZXIucmVtb3ZlQ2xhc3MoJ2lzQWN0aXZlJyk7XHJcbiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgc3dpdGNoZXIoaGFtYnVyZ2VyLCAnaGlkZGVuJyk7XHJcbiAgICAgICAgICAgIGZsYWcgPSB0cnVlO1xyXG4gICAgICAgIH0sIDUwMCk7XHJcbiAgICB9XHJcblxyXG59KTtcclxuIiwiY29uc29sZS5sb2coJ9Cf0YDQuNCy0LXRgiDQvNC40YAnKTsiXX0=
